Problem: Social Network Connectivity

Input:
- A social network containing n member
- A log file containing m timestamps at which times pairs of members formed memberships (sorted by timestamp)

Output:
- An algorithm to determine the earliest time at which all members are connected (every member is a friend of a friend of a friend)

Hint: Expected time O(mlogn), space O(n)


ALGORITHM
1. Go through the log file. For each timestamp checked, one union() is called. We use weighted union-find here. Time 0(log(n))
2. Check if the size of any tree is equals to n. If so, all members are connected, return the timestamp; if not, continue to the next timestamp.

Time complexity: mlog(n)
Space: log(n) (an array size nfor original union-find id and an array size n for keeping track of tree size)
